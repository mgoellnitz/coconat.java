/*
 *
 * Copyright 2015-2020 Martin Goellnitz
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
import groovy.util.Node;

plugins {
  id 'com.jfrog.artifactory' version '4.24.23'
  id 'com.github.kt3k.coveralls' version '2.12.0'
  id "net.ossindex.audit" version "0.4.11"
}

defaultTasks 'clean', 'build', 'jacocoTestReport'

println "Gradle: ${gradle.gradleVersion}"

version = '0.3-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// The variable is needed, even if no publication is executed
def bintrayUser = project.hasProperty('BINTRAY_USER') ? "$BINTRAY_USER" : '-'
def bintrayKey = project.hasProperty('BINTRAY_KEY') ? "$BINTRAY_KEY" : '-'

repositories {
  jcenter()
}

dependencies {
  implementation 'org.slf4j:slf4j-api:1.7.32'
  implementation 'org.apache.commons:commons-lang3:3.11'

  // runtime 'mysql:mysql-connector-java:5.1.45'
  // runtime 'ch.qos.logback:logback-classic:1.2.3'

  testImplementation 'org.testng:testng:7.4.0'
  testImplementation 'com.google.inject:guice:4.2.3'
  // tests are logging at debug level through special logback.groovy
  testImplementation 'ch.qos.logback:logback-classic:1.2.7'
  testImplementation 'org.codehaus.groovy:groovy:3.0.7'
  testImplementation 'hsqldb:hsqldb:1.8.1.1'
  testImplementation 'org.mockito:mockito-core:4.1.0'
}

pmd {
  ruleSets = []
  ruleSetFiles = files('pmd.xml')
  sourceSets = [sourceSets.main]
  toolVersion = '6.40.0'
}

test {
  useTestNG() {
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

jacoco {
  toolVersion = '0.8.7'
}

// maven artifact publication stuff
task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from "${buildDir}/docs/javadoc"
}

artifacts {
  archives javadocJar, sourcesJar
}

artifactory {
  contextUrl = 'https://oss.jfrog.org/artifactory'
  publish {
    repository {
      repoKey = version.endsWith('SNAPSHOT') ? 'oss-snapshot-local' : 'oss-release-local'
      username = "$bintrayUser"
      password = "$bintrayKey"
      // maven = true
    }
    defaults {
      publications ('mavenJava')
    }
  }
}

publishing {
  publications {
    mavenCustom(MavenPublication) {
      from components.java
      groupId 'coconat'
      artifactId 'coconat-java'
    }
    mavenJava(MavenPublication) {
      pom.withXml {
        def pom = asNode()
        def first = pom.children().get(0)
        first.plus {
          new Node(pom, 'name', 'Coconat')
          new Node(pom, 'description', 'CoConAT Content Access Tool - Java')
          new Node(pom, 'url', 'http://mgoellnitz.github.io/coconat/')
          def scm = new Node(pom, 'scm')
          scm.appendNode('connection', 'scm:git:https://github.com/mgoellnitz/coconat.java.git')
          scm.appendNode('developerConnection', 'scm:git:git@github.com:mgoellnitz/coconat.java.git')
          scm.appendNode('url', 'git@github.com:mgoellnitz/coconat.java.git')
          def license = new Node(pom, 'licenses').appendNode('license')
          license.appendNode('name', 'LGPL-3.0')
          license.appendNode('url', 'http://opensource.org/licenses/LGPL-3.0')
          license
        }
        def developer = pom.appendNode('developers').appendNode('developer')
        developer.appendNode('name', 'Martin Goellnitz')
        developer.appendNode('organization', 'Provocon')
        developer.appendNode('organizationUrl', 'http://www.provocon.de/')
      }
      groupId 'coconat'
      from components.java
      artifact sourcesJar
      artifact javadocJar
    }
  }
}
